{
    "sourceFile": "api/upload.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1753761784371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753761878793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,44 +4,47 @@\n   },\r\n };\r\n \r\n export default async function handler(req, res) {\r\n-  if (req.method !== 'POST') {\r\n-    return res.status(405).json({ message: 'Method not allowed' });\r\n+  if (req.method !== \"POST\") {\r\n+    return res.status(405).json({ message: \"Method not allowed\" });\r\n   }\r\n \r\n-  const busboy = require('busboy');\r\n+  const busboy = require(\"busboy\");\r\n   const bb = busboy({ headers: req.headers });\r\n \r\n   let fileBuffer = null;\r\n \r\n-  bb.on('file', (name, file, info) => {\r\n+  bb.on(\"file\", (name, file, info) => {\r\n     const chunks = [];\r\n-    file.on('data', (data) => {\r\n+    file.on(\"data\", (data) => {\r\n       chunks.push(data);\r\n     });\r\n-    file.on('end', () => {\r\n+    file.on(\"end\", () => {\r\n       fileBuffer = Buffer.concat(chunks);\r\n     });\r\n   });\r\n \r\n-  bb.on('finish', async () => {\r\n+  bb.on(\"finish\", async () => {\r\n     try {\r\n       const formData = new FormData();\r\n-      formData.append('file', new Blob([fileBuffer]), 'upload.pdf');\r\n+      formData.append(\"file\", new Blob([fileBuffer]), \"upload.pdf\");\r\n \r\n-      const heyRes = await fetch('https://api.heyzine.com/v1/flipbooks', {\r\n-        method: 'POST',\r\n+      const heyRes = await fetch(\"https://api.heyzine.com/v1/flipbooks\", {\r\n+        method: \"POST\",\r\n         headers: {\r\n-          'Authorization': '5ed8e59caeca7140e2ef91106805922918d89451.f019775a16596720',\r\n+          Authorization:\r\n+            \"5ed8e59caeca7140e2ef91106805922918d89451.f019775a16596720\",\r\n         },\r\n         body: formData,\r\n       });\r\n \r\n       const result = await heyRes.json();\r\n       res.status(200).json(result);\r\n     } catch (err) {\r\n-      res.status(500).json({ error: 'Upload to Heyzine failed', detail: err.message });\r\n+      res\r\n+        .status(500)\r\n+        .json({ error: \"Upload to Heyzine failed\", detail: err.message });\r\n     }\r\n   });\r\n \r\n   req.pipe(bb);\r\n"
                }
            ],
            "date": 1753761784371,
            "name": "Commit-0",
            "content": "export const config = {\r\n  api: {\r\n    bodyParser: false,\r\n  },\r\n};\r\n\r\nexport default async function handler(req, res) {\r\n  if (req.method !== 'POST') {\r\n    return res.status(405).json({ message: 'Method not allowed' });\r\n  }\r\n\r\n  const busboy = require('busboy');\r\n  const bb = busboy({ headers: req.headers });\r\n\r\n  let fileBuffer = null;\r\n\r\n  bb.on('file', (name, file, info) => {\r\n    const chunks = [];\r\n    file.on('data', (data) => {\r\n      chunks.push(data);\r\n    });\r\n    file.on('end', () => {\r\n      fileBuffer = Buffer.concat(chunks);\r\n    });\r\n  });\r\n\r\n  bb.on('finish', async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', new Blob([fileBuffer]), 'upload.pdf');\r\n\r\n      const heyRes = await fetch('https://api.heyzine.com/v1/flipbooks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': '5ed8e59caeca7140e2ef91106805922918d89451.f019775a16596720',\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const result = await heyRes.json();\r\n      res.status(200).json(result);\r\n    } catch (err) {\r\n      res.status(500).json({ error: 'Upload to Heyzine failed', detail: err.message });\r\n    }\r\n  });\r\n\r\n  req.pipe(bb);\r\n}\r\n"
        }
    ]
}